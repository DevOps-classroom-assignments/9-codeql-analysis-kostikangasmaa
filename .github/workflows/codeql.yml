# CodeQL + Docker CI
# Runs CodeQL analysis for Go and a simple Docker build & run smoke test.
name: CodeQL + Docker CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: go

      # Autobuild attempts to build the project so CodeQL can analyze compiled artifacts.
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v2

  docker:
    name: Docker Build & Run
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx (optional but helpful for multi-platform)
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          IMAGE="${{ github.repository }}:ci-${{ github.sha }}"
          echo "Building image $IMAGE"
          docker build -t "$IMAGE" .

      - name: Run container (smoke test)
        run: |
          IMAGE="${{ github.repository }}:ci-${{ github.sha }}"
          # Start container in detached mode; if it fails, print logs and exit non-zero.
          if ! docker run -d --name ci-test "$IMAGE" >/dev/null; then
            echo "Container failed to start; printing logs (if any):"
            docker logs ci-test || true
            docker rm -f ci-test >/dev/null 2>&1 || true
            exit 1
          fi
          # Wait a short while for the container to settle
          sleep 3
          echo "Container started successfully; showing status:"
          docker ps -a --filter "name=ci-test"
          # Stop and remove the container
          docker stop ci-test || true
          docker rm ci-test || true